0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 21 15:07:33 2024
0000              5   ;--------------------------------------------------------
                  5   $name main
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _getsn
0000             28            public _getsn_PARM_2
0000             29   ;--------------------------------------------------------
0000             30   ; Special Function Registers
0000             31   ;--------------------------------------------------------
0000             32   _ACC            DATA 0xe0
0000             33   _ADC0ASAH       DATA 0xb6
0000             34   _ADC0ASAL       DATA 0xb5
0000             35   _ADC0ASCF       DATA 0xa1
0000             36   _ADC0ASCT       DATA 0xc7
0000             37   _ADC0CF0        DATA 0xbc
0000             38   _ADC0CF1        DATA 0xb9
0000             39   _ADC0CF2        DATA 0xdf
0000             40   _ADC0CN0        DATA 0xe8
0000             41   _ADC0CN1        DATA 0xb2
0000             42   _ADC0CN2        DATA 0xb3
0000             43   _ADC0GTH        DATA 0xc4
0000             44   _ADC0GTL        DATA 0xc3
0000             45   _ADC0H          DATA 0xbe
0000             46   _ADC0L          DATA 0xbd
0000             47   _ADC0LTH        DATA 0xc6
0000             48   _ADC0LTL        DATA 0xc5
0000             49   _ADC0MX         DATA 0xbb
0000             50   _B              DATA 0xf0
0000             51   _CKCON0         DATA 0x8e
0000             52   _CKCON1         DATA 0xa6
0000             53   _CLEN0          DATA 0xc6
0000             54   _CLIE0          DATA 0xc7
0000             55   _CLIF0          DATA 0xe8
0000             56   _CLKSEL         DATA 0xa9
0000             57   _CLOUT0         DATA 0xd1
0000             58   _CLU0CF         DATA 0xb1
0000             59   _CLU0FN         DATA 0xaf
0000             60   _CLU0MX         DATA 0x84
0000             61   _CLU1CF         DATA 0xb3
0000             62   _CLU1FN         DATA 0xb2
0000             63   _CLU1MX         DATA 0x85
0000             64   _CLU2CF         DATA 0xb6
0000             65   _CLU2FN         DATA 0xb5
0000             66   _CLU2MX         DATA 0x91
0000             67   _CLU3CF         DATA 0xbf
0000             68   _CLU3FN         DATA 0xbe
0000             69   _CLU3MX         DATA 0xae
0000             70   _CMP0CN0        DATA 0x9b
0000             71   _CMP0CN1        DATA 0x99
0000             72   _CMP0MD         DATA 0x9d
0000             73   _CMP0MX         DATA 0x9f
0000             74   _CMP1CN0        DATA 0xbf
0000             75   _CMP1CN1        DATA 0xac
0000             76   _CMP1MD         DATA 0xab
0000             77   _CMP1MX         DATA 0xaa
0000             78   _CRC0CN0        DATA 0xce
0000             79   _CRC0CN1        DATA 0x86
0000             80   _CRC0CNT        DATA 0xd3
0000             81   _CRC0DAT        DATA 0xcb
0000             82   _CRC0FLIP       DATA 0xcf
0000             83   _CRC0IN         DATA 0xca
0000             84   _CRC0ST         DATA 0xd2
0000             85   _DAC0CF0        DATA 0x91
0000             86   _DAC0CF1        DATA 0x92
0000             87   _DAC0H          DATA 0x85
0000             88   _DAC0L          DATA 0x84
0000             89   _DAC1CF0        DATA 0x93
0000             90   _DAC1CF1        DATA 0x94
0000             91   _DAC1H          DATA 0x8a
0000             92   _DAC1L          DATA 0x89
0000             93   _DAC2CF0        DATA 0x95
0000             94   _DAC2CF1        DATA 0x96
0000             95   _DAC2H          DATA 0x8c
0000             96   _DAC2L          DATA 0x8b
0000             97   _DAC3CF0        DATA 0x9a
0000             98   _DAC3CF1        DATA 0x9c
0000             99   _DAC3H          DATA 0x8e
0000            100   _DAC3L          DATA 0x8d
0000            101   _DACGCF0        DATA 0x88
0000            102   _DACGCF1        DATA 0x98
0000            103   _DACGCF2        DATA 0xa2
0000            104   _DERIVID        DATA 0xad
0000            105   _DEVICEID       DATA 0xb5
0000            106   _DPH            DATA 0x83
0000            107   _DPL            DATA 0x82
0000            108   _EIE1           DATA 0xe6
0000            109   _EIE2           DATA 0xf3
0000            110   _EIP1           DATA 0xbb
0000            111   _EIP1H          DATA 0xee
0000            112   _EIP2           DATA 0xed
0000            113   _EIP2H          DATA 0xf6
0000            114   _EMI0CN         DATA 0xe7
0000            115   _FLKEY          DATA 0xb7
0000            116   _HFO0CAL        DATA 0xc7
0000            117   _HFO1CAL        DATA 0xd6
0000            118   _HFOCN          DATA 0xef
0000            119   _I2C0ADM        DATA 0xff
0000            120   _I2C0CN0        DATA 0xba
0000            121   _I2C0DIN        DATA 0xbc
0000            122   _I2C0DOUT       DATA 0xbb
0000            123   _I2C0FCN0       DATA 0xad
0000            124   _I2C0FCN1       DATA 0xab
0000            125   _I2C0FCT        DATA 0xf5
0000            126   _I2C0SLAD       DATA 0xbd
0000            127   _I2C0STAT       DATA 0xb9
0000            128   _IE             DATA 0xa8
0000            129   _IP             DATA 0xb8
0000            130   _IPH            DATA 0xf2
0000            131   _IT01CF         DATA 0xe4
0000            132   _LFO0CN         DATA 0xb1
0000            133   _P0             DATA 0x80
0000            134   _P0MASK         DATA 0xfe
0000            135   _P0MAT          DATA 0xfd
0000            136   _P0MDIN         DATA 0xf1
0000            137   _P0MDOUT        DATA 0xa4
0000            138   _P0SKIP         DATA 0xd4
0000            139   _P1             DATA 0x90
0000            140   _P1MASK         DATA 0xee
0000            141   _P1MAT          DATA 0xed
0000            142   _P1MDIN         DATA 0xf2
0000            143   _P1MDOUT        DATA 0xa5
0000            144   _P1SKIP         DATA 0xd5
0000            145   _P2             DATA 0xa0
0000            146   _P2MASK         DATA 0xfc
0000            147   _P2MAT          DATA 0xfb
0000            148   _P2MDIN         DATA 0xf3
0000            149   _P2MDOUT        DATA 0xa6
0000            150   _P2SKIP         DATA 0xcc
0000            151   _P3             DATA 0xb0
0000            152   _P3MDIN         DATA 0xf4
0000            153   _P3MDOUT        DATA 0x9c
0000            154   _PCA0CENT       DATA 0x9e
0000            155   _PCA0CLR        DATA 0x9c
0000            156   _PCA0CN0        DATA 0xd8
0000            157   _PCA0CPH0       DATA 0xfc
0000            158   _PCA0CPH1       DATA 0xea
0000            159   _PCA0CPH2       DATA 0xec
0000            160   _PCA0CPH3       DATA 0xf5
0000            161   _PCA0CPH4       DATA 0x85
0000            162   _PCA0CPH5       DATA 0xde
0000            163   _PCA0CPL0       DATA 0xfb
0000            164   _PCA0CPL1       DATA 0xe9
0000            165   _PCA0CPL2       DATA 0xeb
0000            166   _PCA0CPL3       DATA 0xf4
0000            167   _PCA0CPL4       DATA 0x84
0000            168   _PCA0CPL5       DATA 0xdd
0000            169   _PCA0CPM0       DATA 0xda
0000            170   _PCA0CPM1       DATA 0xdb
0000            171   _PCA0CPM2       DATA 0xdc
0000            172   _PCA0CPM3       DATA 0xae
0000            173   _PCA0CPM4       DATA 0xaf
0000            174   _PCA0CPM5       DATA 0xcc
0000            175   _PCA0H          DATA 0xfa
0000            176   _PCA0L          DATA 0xf9
0000            177   _PCA0MD         DATA 0xd9
0000            178   _PCA0POL        DATA 0x96
0000            179   _PCA0PWM        DATA 0xf7
0000            180   _PCON0          DATA 0x87
0000            181   _PCON1          DATA 0xcd
0000            182   _PFE0CN         DATA 0xc1
0000            183   _PRTDRV         DATA 0xf6
0000            184   _PSCTL          DATA 0x8f
0000            185   _PSTAT0         DATA 0xaa
0000            186   _PSW            DATA 0xd0
0000            187   _REF0CN         DATA 0xd1
0000            188   _REG0CN         DATA 0xc9
0000            189   _REVID          DATA 0xb6
0000            190   _RSTSRC         DATA 0xef
0000            191   _SBCON1         DATA 0x94
0000            192   _SBRLH1         DATA 0x96
0000            193   _SBRLL1         DATA 0x95
0000            194   _SBUF           DATA 0x99
0000            195   _SBUF0          DATA 0x99
0000            196   _SBUF1          DATA 0x92
0000            197   _SCON           DATA 0x98
0000            198   _SCON0          DATA 0x98
0000            199   _SCON1          DATA 0xc8
0000            200   _SFRPAGE        DATA 0xa7
0000            201   _SFRPGCN        DATA 0xbc
0000            202   _SFRSTACK       DATA 0xd7
0000            203   _SMB0ADM        DATA 0xd6
0000            204   _SMB0ADR        DATA 0xd7
0000            205   _SMB0CF         DATA 0xc1
0000            206   _SMB0CN0        DATA 0xc0
0000            207   _SMB0DAT        DATA 0xc2
0000            208   _SMB0FCN0       DATA 0xc3
0000            209   _SMB0FCN1       DATA 0xc4
0000            210   _SMB0FCT        DATA 0xef
0000            211   _SMB0RXLN       DATA 0xc5
0000            212   _SMB0TC         DATA 0xac
0000            213   _SMOD1          DATA 0x93
0000            214   _SP             DATA 0x81
0000            215   _SPI0CFG        DATA 0xa1
0000            216   _SPI0CKR        DATA 0xa2
0000            217   _SPI0CN0        DATA 0xf8
0000            218   _SPI0DAT        DATA 0xa3
0000            219   _SPI0FCN0       DATA 0x9a
0000            220   _SPI0FCN1       DATA 0x9b
0000            221   _SPI0FCT        DATA 0xf7
0000            222   _SPI0PCF        DATA 0xdf
0000            223   _TCON           DATA 0x88
0000            224   _TH0            DATA 0x8c
0000            225   _TH1            DATA 0x8d
0000            226   _TL0            DATA 0x8a
0000            227   _TL1            DATA 0x8b
0000            228   _TMOD           DATA 0x89
0000            229   _TMR2CN0        DATA 0xc8
0000            230   _TMR2CN1        DATA 0xfd
0000            231   _TMR2H          DATA 0xcf
0000            232   _TMR2L          DATA 0xce
0000            233   _TMR2RLH        DATA 0xcb
0000            234   _TMR2RLL        DATA 0xca
0000            235   _TMR3CN0        DATA 0x91
0000            236   _TMR3CN1        DATA 0xfe
0000            237   _TMR3H          DATA 0x95
0000            238   _TMR3L          DATA 0x94
0000            239   _TMR3RLH        DATA 0x93
0000            240   _TMR3RLL        DATA 0x92
0000            241   _TMR4CN0        DATA 0x98
0000            242   _TMR4CN1        DATA 0xff
0000            243   _TMR4H          DATA 0xa5
0000            244   _TMR4L          DATA 0xa4
0000            245   _TMR4RLH        DATA 0xa3
0000            246   _TMR4RLL        DATA 0xa2
0000            247   _TMR5CN0        DATA 0xc0
0000            248   _TMR5CN1        DATA 0xf1
0000            249   _TMR5H          DATA 0xd5
0000            250   _TMR5L          DATA 0xd4
0000            251   _TMR5RLH        DATA 0xd3
0000            252   _TMR5RLL        DATA 0xd2
0000            253   _UART0PCF       DATA 0xd9
0000            254   _UART1FCN0      DATA 0x9d
0000            255   _UART1FCN1      DATA 0xd8
0000            256   _UART1FCT       DATA 0xfa
0000            257   _UART1LIN       DATA 0x9e
0000            258   _UART1PCF       DATA 0xda
0000            259   _VDM0CN         DATA 0xff
0000            260   _WDTCN          DATA 0x97
0000            261   _XBR0           DATA 0xe1
0000            262   _XBR1           DATA 0xe2
0000            263   _XBR2           DATA 0xe3
0000            264   _XOSC0CN        DATA 0x86
0000            265   _DPTR           DATA 0x8382
0000            266   _TMR2RL         DATA 0xcbca
0000            267   _TMR3RL         DATA 0x9392
0000            268   _TMR4RL         DATA 0xa3a2
0000            269   _TMR5RL         DATA 0xd3d2
0000            270   _TMR0           DATA 0x8c8a
0000            271   _TMR1           DATA 0x8d8b
0000            272   _TMR2           DATA 0xcfce
0000            273   _TMR3           DATA 0x9594
0000            274   _TMR4           DATA 0xa5a4
0000            275   _TMR5           DATA 0xd5d4
0000            276   _SBRL1          DATA 0x9695
0000            277   _PCA0           DATA 0xfaf9
0000            278   _PCA0CP0        DATA 0xfcfb
0000            279   _PCA0CP1        DATA 0xeae9
0000            280   _PCA0CP2        DATA 0xeceb
0000            281   _PCA0CP3        DATA 0xf5f4
0000            282   _PCA0CP4        DATA 0x8584
0000            283   _PCA0CP5        DATA 0xdedd
0000            284   _ADC0ASA        DATA 0xb6b5
0000            285   _ADC0GT         DATA 0xc4c3
0000            286   _ADC0           DATA 0xbebd
0000            287   _ADC0LT         DATA 0xc6c5
0000            288   _DAC0           DATA 0x8584
0000            289   _DAC1           DATA 0x8a89
0000            290   _DAC2           DATA 0x8c8b
0000            291   _DAC3           DATA 0x8e8d
0000            292   ;--------------------------------------------------------
0000            293   ; special function bits
0000            294   ;--------------------------------------------------------
0000            295   _ACC_0          BIT 0xe0
0000            296   _ACC_1          BIT 0xe1
0000            297   _ACC_2          BIT 0xe2
0000            298   _ACC_3          BIT 0xe3
0000            299   _ACC_4          BIT 0xe4
0000            300   _ACC_5          BIT 0xe5
0000            301   _ACC_6          BIT 0xe6
0000            302   _ACC_7          BIT 0xe7
0000            303   _TEMPE          BIT 0xe8
0000            304   _ADGN0          BIT 0xe9
0000            305   _ADGN1          BIT 0xea
0000            306   _ADWINT         BIT 0xeb
0000            307   _ADBUSY         BIT 0xec
0000            308   _ADINT          BIT 0xed
0000            309   _IPOEN          BIT 0xee
0000            310   _ADEN           BIT 0xef
0000            311   _B_0            BIT 0xf0
0000            312   _B_1            BIT 0xf1
0000            313   _B_2            BIT 0xf2
0000            314   _B_3            BIT 0xf3
0000            315   _B_4            BIT 0xf4
0000            316   _B_5            BIT 0xf5
0000            317   _B_6            BIT 0xf6
0000            318   _B_7            BIT 0xf7
0000            319   _C0FIF          BIT 0xe8
0000            320   _C0RIF          BIT 0xe9
0000            321   _C1FIF          BIT 0xea
0000            322   _C1RIF          BIT 0xeb
0000            323   _C2FIF          BIT 0xec
0000            324   _C2RIF          BIT 0xed
0000            325   _C3FIF          BIT 0xee
0000            326   _C3RIF          BIT 0xef
0000            327   _D1SRC0         BIT 0x88
0000            328   _D1SRC1         BIT 0x89
0000            329   _D1AMEN         BIT 0x8a
0000            330   _D01REFSL       BIT 0x8b
0000            331   _D3SRC0         BIT 0x8c
0000            332   _D3SRC1         BIT 0x8d
0000            333   _D3AMEN         BIT 0x8e
0000            334   _D23REFSL       BIT 0x8f
0000            335   _D0UDIS         BIT 0x98
0000            336   _D1UDIS         BIT 0x99
0000            337   _D2UDIS         BIT 0x9a
0000            338   _D3UDIS         BIT 0x9b
0000            339   _EX0            BIT 0xa8
0000            340   _ET0            BIT 0xa9
0000            341   _EX1            BIT 0xaa
0000            342   _ET1            BIT 0xab
0000            343   _ES0            BIT 0xac
0000            344   _ET2            BIT 0xad
0000            345   _ESPI0          BIT 0xae
0000            346   _EA             BIT 0xaf
0000            347   _PX0            BIT 0xb8
0000            348   _PT0            BIT 0xb9
0000            349   _PX1            BIT 0xba
0000            350   _PT1            BIT 0xbb
0000            351   _PS0            BIT 0xbc
0000            352   _PT2            BIT 0xbd
0000            353   _PSPI0          BIT 0xbe
0000            354   _P0_0           BIT 0x80
0000            355   _P0_1           BIT 0x81
0000            356   _P0_2           BIT 0x82
0000            357   _P0_3           BIT 0x83
0000            358   _P0_4           BIT 0x84
0000            359   _P0_5           BIT 0x85
0000            360   _P0_6           BIT 0x86
0000            361   _P0_7           BIT 0x87
0000            362   _P1_0           BIT 0x90
0000            363   _P1_1           BIT 0x91
0000            364   _P1_2           BIT 0x92
0000            365   _P1_3           BIT 0x93
0000            366   _P1_4           BIT 0x94
0000            367   _P1_5           BIT 0x95
0000            368   _P1_6           BIT 0x96
0000            369   _P1_7           BIT 0x97
0000            370   _P2_0           BIT 0xa0
0000            371   _P2_1           BIT 0xa1
0000            372   _P2_2           BIT 0xa2
0000            373   _P2_3           BIT 0xa3
0000            374   _P2_4           BIT 0xa4
0000            375   _P2_5           BIT 0xa5
0000            376   _P2_6           BIT 0xa6
0000            377   _P3_0           BIT 0xb0
0000            378   _P3_1           BIT 0xb1
0000            379   _P3_2           BIT 0xb2
0000            380   _P3_3           BIT 0xb3
0000            381   _P3_4           BIT 0xb4
0000            382   _P3_7           BIT 0xb7
0000            383   _CCF0           BIT 0xd8
0000            384   _CCF1           BIT 0xd9
0000            385   _CCF2           BIT 0xda
0000            386   _CCF3           BIT 0xdb
0000            387   _CCF4           BIT 0xdc
0000            388   _CCF5           BIT 0xdd
0000            389   _CR             BIT 0xde
0000            390   _CF             BIT 0xdf
0000            391   _PARITY         BIT 0xd0
0000            392   _F1             BIT 0xd1
0000            393   _OV             BIT 0xd2
0000            394   _RS0            BIT 0xd3
0000            395   _RS1            BIT 0xd4
0000            396   _F0             BIT 0xd5
0000            397   _AC             BIT 0xd6
0000            398   _CY             BIT 0xd7
0000            399   _RI             BIT 0x98
0000            400   _TI             BIT 0x99
0000            401   _RB8            BIT 0x9a
0000            402   _TB8            BIT 0x9b
0000            403   _REN            BIT 0x9c
0000            404   _CE             BIT 0x9d
0000            405   _SMODE          BIT 0x9e
0000            406   _RI1            BIT 0xc8
0000            407   _TI1            BIT 0xc9
0000            408   _RBX1           BIT 0xca
0000            409   _TBX1           BIT 0xcb
0000            410   _REN1           BIT 0xcc
0000            411   _PERR1          BIT 0xcd
0000            412   _OVR1           BIT 0xce
0000            413   _SI             BIT 0xc0
0000            414   _ACK            BIT 0xc1
0000            415   _ARBLOST        BIT 0xc2
0000            416   _ACKRQ          BIT 0xc3
0000            417   _STO            BIT 0xc4
0000            418   _STA            BIT 0xc5
0000            419   _TXMODE         BIT 0xc6
0000            420   _MASTER         BIT 0xc7
0000            421   _SPIEN          BIT 0xf8
0000            422   _TXNF           BIT 0xf9
0000            423   _NSSMD0         BIT 0xfa
0000            424   _NSSMD1         BIT 0xfb
0000            425   _RXOVRN         BIT 0xfc
0000            426   _MODF           BIT 0xfd
0000            427   _WCOL           BIT 0xfe
0000            428   _SPIF           BIT 0xff
0000            429   _IT0            BIT 0x88
0000            430   _IE0            BIT 0x89
0000            431   _IT1            BIT 0x8a
0000            432   _IE1            BIT 0x8b
0000            433   _TR0            BIT 0x8c
0000            434   _TF0            BIT 0x8d
0000            435   _TR1            BIT 0x8e
0000            436   _TF1            BIT 0x8f
0000            437   _T2XCLK0        BIT 0xc8
0000            438   _T2XCLK1        BIT 0xc9
0000            439   _TR2            BIT 0xca
0000            440   _T2SPLIT        BIT 0xcb
0000            441   _TF2CEN         BIT 0xcc
0000            442   _TF2LEN         BIT 0xcd
0000            443   _TF2L           BIT 0xce
0000            444   _TF2H           BIT 0xcf
0000            445   _T4XCLK0        BIT 0x98
0000            446   _T4XCLK1        BIT 0x99
0000            447   _TR4            BIT 0x9a
0000            448   _T4SPLIT        BIT 0x9b
0000            449   _TF4CEN         BIT 0x9c
0000            450   _TF4LEN         BIT 0x9d
0000            451   _TF4L           BIT 0x9e
0000            452   _TF4H           BIT 0x9f
0000            453   _T5XCLK0        BIT 0xc0
0000            454   _T5XCLK1        BIT 0xc1
0000            455   _TR5            BIT 0xc2
0000            456   _T5SPLIT        BIT 0xc3
0000            457   _TF5CEN         BIT 0xc4
0000            458   _TF5LEN         BIT 0xc5
0000            459   _TF5L           BIT 0xc6
0000            460   _TF5H           BIT 0xc7
0000            461   _RIE            BIT 0xd8
0000            462   _RXTO0          BIT 0xd9
0000            463   _RXTO1          BIT 0xda
0000            464   _RFRQ           BIT 0xdb
0000            465   _TIE            BIT 0xdc
0000            466   _TXHOLD         BIT 0xdd
0000            467   _TXNF1          BIT 0xde
0000            468   _TFRQ           BIT 0xdf
0000            469   ;--------------------------------------------------------
0000            470   ; overlayable register banks
0000            471   ;--------------------------------------------------------
0000            472            rbank0 segment data overlay
0000            473   ;--------------------------------------------------------
0000            474   ; internal ram data
0000            475   ;--------------------------------------------------------
0000            476            rseg R_DSEG
0000            477   _getsn_PARM_2:
0000            478            ds 2
0002            479   _getsn_buff_1_35:
0002            480            ds 3
0005            481   _getsn_sloc0_1_0:
0005            482            ds 2
0007            483   _main_v_1_41:
0007            484            ds 16
0017            485   _main_buff_1_41:
0017            486            ds 17
0028            487   ;--------------------------------------------------------
0028            488   ; overlayable items in internal ram 
0028            489   ;--------------------------------------------------------
0000            490            rseg R_OSEG
0000            491   ;--------------------------------------------------------
0000            492   ; indirectly addressable internal ram data
0000            493   ;--------------------------------------------------------
0000            494            rseg R_ISEG
0000            495   ;--------------------------------------------------------
0000            496   ; absolute internal ram data
0000            497   ;--------------------------------------------------------
0000            498            DSEG
0000            499   ;--------------------------------------------------------
0000            500   ; bit data
0000            501   ;--------------------------------------------------------
0000            502            rseg R_BSEG
0000            503   ;--------------------------------------------------------
0000            504   ; paged external ram data
0000            505   ;--------------------------------------------------------
0000            506            rseg R_PSEG
0000            507   ;--------------------------------------------------------
0000            508   ; external ram data
0000            509   ;--------------------------------------------------------
0000            510            rseg R_XSEG
0000            511   ;--------------------------------------------------------
0000            512   ; absolute external ram data
0000            513   ;--------------------------------------------------------
0000            514            XSEG
0000            515   ;--------------------------------------------------------
0000            516   ; external initialized ram data
0000            517   ;--------------------------------------------------------
0000            518            rseg R_IXSEG
0000            519            rseg R_HOME
0000            520            rseg R_GSINIT
0000            521            rseg R_CSEG
0000            522   ;--------------------------------------------------------
0000            523   ; Reset entry point and interrupt vectors
0000            524   ;--------------------------------------------------------
0000            525            CSEG at 0x0000
0000 020000     526            ljmp    _crt0
0003            527   ;--------------------------------------------------------
0003            528   ; global & static initialisations
0003            529   ;--------------------------------------------------------
0000            530            rseg R_HOME
0000            531            rseg R_GSINIT
0000            532            rseg R_GSINIT
0000            533   ;--------------------------------------------------------
0000            534   ; data variables initialization
0000            535   ;--------------------------------------------------------
0000            536            rseg R_DINIT
0000            537            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            538   ;--------------------------------------------------------
0000            539   ; code
0000            540   ;--------------------------------------------------------
0000            541            rseg R_CSEG
0000            542   ;------------------------------------------------------------
0000            543   ;Allocation info for local variables in function 'getsn'
0000            544   ;------------------------------------------------------------
0000            545   ;len                       Allocated with name '_getsn_PARM_2'
0000            546   ;buff                      Allocated with name '_getsn_buff_1_35'
0000            547   ;j                         Allocated with name '_getsn_sloc0_1_0'
0000            548   ;c                         Allocated to registers r3 
0000            549   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0000            550   ;------------------------------------------------------------
0000            551   ;        main.c:9: int getsn (char * buff, int len)
0000            552   ;        -----------------------------------------
0000            553   ;         function getsn
0000            554   ;        -----------------------------------------
0000            555   _getsn:
0000            556            using   0
0000 858228     557            mov     _getsn_buff_1_35,dpl
0003 858329     558            mov     (_getsn_buff_1_35 + 1),dph
0006 85F02A     559            mov     (_getsn_buff_1_35 + 2),b
0009            560   ;        main.c:14: for(j=0; j<(len-1); j++)
0009 E4         561            clr     a
000A F578       562            mov     _getsn_sloc0_1_0,a
000C F579       563            mov     (_getsn_sloc0_1_0 + 1),a
000E E5D0       564            mov     a,_getsn_PARM_2
0010 24FF       565            add     a,#0xff
0012 FF         566            mov     r7,a
0013 E5D1       567            mov     a,(_getsn_PARM_2 + 1)
0015 34FF       568            addc    a,#0xff
0017 F8         569            mov     r0,a
0018 7900       570            mov     r1,#0x00
001A 7A00       571            mov     r2,#0x00
001C            572   L002005?:
001C C3         573            clr     c
001D E9         574            mov     a,r1
001E 9F         575            subb    a,r7
001F EA         576            mov     a,r2
0020 6480       577            xrl     a,#0x80
0022 88F0       578            mov     b,r0
0024 63F080     579            xrl     b,#0x80
0027 95F0       580            subb    a,b
0029 5000       581            jnc     L002008?
002B            582   ;        main.c:16: c=getchar();
002B C002       583            push    ar2
002D C007       584            push    ar7
002F C000       585            push    ar0
0031 C001       586            push    ar1
0033 120000     587            lcall   _getchar
0036 AB82       588            mov     r3,dpl
0038 D001       589            pop     ar1
003A D000       590            pop     ar0
003C D007       591            pop     ar7
003E D002       592            pop     ar2
0040            593   ;        main.c:17: if ( (c=='\n') || (c=='\r') )
0040 BB0AF8     594            cjne    r3,#0x0A,L002015?
0043 8000       595            sjmp    L002001?
0045            596   L002015?:
0045 BB0D78     597            cjne    r3,#0x0D,L002002?
0048            598   L002001?:
0048            599   ;        main.c:19: buff[j]=0;
0048 E578       600            mov     a,_getsn_sloc0_1_0
004A 2528       601            add     a,_getsn_buff_1_35
004C FC         602            mov     r4,a
004D E579       603            mov     a,(_getsn_sloc0_1_0 + 1)
004F 3529       604            addc    a,(_getsn_buff_1_35 + 1)
0051 FD         605            mov     r5,a
0052 AE2A       606            mov     r6,(_getsn_buff_1_35 + 2)
0054 8C82       607            mov     dpl,r4
0056 8D83       608            mov     dph,r5
0058 8EF0       609            mov     b,r6
005A E4         610            clr     a
005B 120000     611            lcall   __gptrput
005E            612   ;        main.c:20: return j;
005E 857882     613            mov     dpl,_getsn_sloc0_1_0
0061 857983     614            mov     dph,(_getsn_sloc0_1_0 + 1)
0064 22         615            ret
0065            616   L002002?:
0065            617   ;        main.c:24: buff[j]=c;
0065 E9         618            mov     a,r1
0066 2528       619            add     a,_getsn_buff_1_35
0068 FC         620            mov     r4,a
0069 EA         621            mov     a,r2
006A 3529       622            addc    a,(_getsn_buff_1_35 + 1)
006C FD         623            mov     r5,a
006D AE2A       624            mov     r6,(_getsn_buff_1_35 + 2)
006F 8C82       625            mov     dpl,r4
0071 8D83       626            mov     dph,r5
0073 8EF0       627            mov     b,r6
0075 EB         628            mov     a,r3
0076 120000     629            lcall   __gptrput
0079            630   ;        main.c:14: for(j=0; j<(len-1); j++)
0079 09         631            inc     r1
007A B900F8     632            cjne    r1,#0x00,L002018?
007D 0A         633            inc     r2
007E            634   L002018?:
007E 8978       635            mov     _getsn_sloc0_1_0,r1
0080 8A79       636            mov     (_getsn_sloc0_1_0 + 1),r2
0082 8000       637            sjmp    L002005?
0084            638   L002008?:
0084            639   ;        main.c:27: buff[j]=0;
0084 E578       640            mov     a,_getsn_sloc0_1_0
0086 2528       641            add     a,_getsn_buff_1_35
0088 FA         642            mov     r2,a
0089 E579       643            mov     a,(_getsn_sloc0_1_0 + 1)
008B 3529       644            addc    a,(_getsn_buff_1_35 + 1)
008D FB         645            mov     r3,a
008E AC2A       646            mov     r4,(_getsn_buff_1_35 + 2)
0090 8A82       647            mov     dpl,r2
0092 8B83       648            mov     dph,r3
0094 8CF0       649            mov     b,r4
0096 E4         650            clr     a
0097 120000     651            lcall   __gptrput
009A            652   ;        main.c:28: return len;
009A 85D082     653            mov     dpl,_getsn_PARM_2
009D 85D183     654            mov     dph,(_getsn_PARM_2 + 1)
00A0 22         655            ret
00A1            656   ;------------------------------------------------------------
00A1            657   ;Allocation info for local variables in function 'main'
00A1            658   ;------------------------------------------------------------
00A1            659   ;v                         Allocated with name '_main_v_1_41'
00A1            660   ;buff                      Allocated with name '_main_buff_1_41'
00A1            661   ;------------------------------------------------------------
00A1            662   ;        main.c:31: void main (void)
00A1            663   ;        -----------------------------------------
00A1            664   ;         function main
00A1            665   ;        -----------------------------------------
00A1            666   _main:
00A1            667   ;        main.c:36: InitADC();
00A1 120000     668            lcall   _InitADC
00A4            669   ;        main.c:37: LCD_4BIT();
00A4 120000     670            lcall   _LCD_4BIT
00A7            671   ;        main.c:39: waitms(500); // Give PuTTy a chance to start before sending
00A7 9001F4     672            mov     dptr,#0x01F4
00AA 120000     673            lcall   _waitms
00AD            674   ;        main.c:40: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00AD 74F8       675            mov     a,#__str_0
00AF C0E0       676            push    acc
00B1 74B4       677            mov     a,#(__str_0 >> 8)
00B3 C0E0       678            push    acc
00B5 7480       679            mov     a,#0x80
00B7 C0E0       680            push    acc
00B9 120000     681            lcall   _printf
00BC 1581       682            dec     sp
00BE 1581       683            dec     sp
00C0 1581       684            dec     sp
00C2            685   ;        main.c:45: __FILE__, __DATE__, __TIME__);
00C2            686   ;        main.c:44: "Compiled: %s, %s\n\n",
00C2 74F8       687            mov     a,#__str_4
00C4 C0E0       688            push    acc
00C6 74B5       689            mov     a,#(__str_4 >> 8)
00C8 C0E0       690            push    acc
00CA 7480       691            mov     a,#0x80
00CC C0E0       692            push    acc
00CE 7438       693            mov     a,#__str_3
00D0 C0E0       694            push    acc
00D2 74B6       695            mov     a,#(__str_3 >> 8)
00D4 C0E0       696            push    acc
00D6 7480       697            mov     a,#0x80
00D8 C0E0       698            push    acc
00DA 7478       699            mov     a,#__str_2
00DC C0E0       700            push    acc
00DE 74B6       701            mov     a,#(__str_2 >> 8)
00E0 C0E0       702            push    acc
00E2 7480       703            mov     a,#0x80
00E4 C0E0       704            push    acc
00E6 74B8       705            mov     a,#__str_1
00E8 C0E0       706            push    acc
00EA 74B6       707            mov     a,#(__str_1 >> 8)
00EC C0E0       708            push    acc
00EE 7480       709            mov     a,#0x80
00F0 C0E0       710            push    acc
00F2 120000     711            lcall   _printf
00F5 E581       712            mov     a,sp
00F7 24F4       713            add     a,#0xf4
00F9 F581       714            mov     sp,a
00FB            715   ;        main.c:47: InitPinADC(2, 2); // Configure P2.2 as analog input
00FB 750002     716            mov     _InitPinADC_PARM_2,#0x02
00FE 758202     717            mov     dpl,#0x02
0101 120000     718            lcall   _InitPinADC
0104            719   ;        main.c:48: InitPinADC(2, 3); // Configure P2.3 as analog input
0104 750003     720            mov     _InitPinADC_PARM_2,#0x03
0107 758202     721            mov     dpl,#0x02
010A 120000     722            lcall   _InitPinADC
010D            723   ;        main.c:49: InitPinADC(2, 4); // Configure P2.4 as analog input
010D 750004     724            mov     _InitPinADC_PARM_2,#0x04
0110 758202     725            mov     dpl,#0x02
0113 120000     726            lcall   _InitPinADC
0116            727   ;        main.c:50: InitPinADC(2, 5); // Configure P2.5 as analog input
0116 750005     728            mov     _InitPinADC_PARM_2,#0x05
0119 758202     729            mov     dpl,#0x02
011C 120000     730            lcall   _InitPinADC
011F            731   ;        main.c:53: LCDprint("LCD 4-bit test:", 1, 1);
011F 750001     732            mov     _LCDprint_PARM_2,#0x01
0122 D200       733            setb    _LCDprint_PARM_3
0124 90B828     734            mov     dptr,#__str_5
0127 75F080     735            mov     b,#0x80
012A 120000     736            lcall   _LCDprint
012D            737   ;        main.c:54: LCDprint("Hello, World!", 2, 1);
012D 750002     738            mov     _LCDprint_PARM_2,#0x02
0130 D200       739            setb    _LCDprint_PARM_3
0132 90B8A8     740            mov     dptr,#__str_6
0135 75F080     741            mov     b,#0x80
0138 120000     742            lcall   _LCDprint
013B            743   ;        main.c:56: while(1)
013B            744   L003002?:
013B            745   ;        main.c:59: v[0] = Volts_at_Pin(QFP32_MUX_P2_2);
013B 75820F     746            mov     dpl,#0x0F
013E 120000     747            lcall   _Volts_at_Pin
0141 AA82       748            mov     r2,dpl
0143 AB83       749            mov     r3,dph
0145 ACF0       750            mov     r4,b
0147 FD         751            mov     r5,a
0148 8AB8       752            mov     _main_v_1_41,r2
014A 8BB9       753            mov     (_main_v_1_41 + 1),r3
014C 8CBA       754            mov     (_main_v_1_41 + 2),r4
014E 8DBB       755            mov     (_main_v_1_41 + 3),r5
0150            756   ;        main.c:60: v[1] = Volts_at_Pin(QFP32_MUX_P2_3);
0150 758210     757            mov     dpl,#0x10
0153 120000     758            lcall   _Volts_at_Pin
0156 AA82       759            mov     r2,dpl
0158 AB83       760            mov     r3,dph
015A ACF0       761            mov     r4,b
015C FD         762            mov     r5,a
015D 8ABC       763            mov     (_main_v_1_41 + 0x0004),r2
015F 8BBD       764            mov     ((_main_v_1_41 + 0x0004) + 1),r3
0161 8CBE       765            mov     ((_main_v_1_41 + 0x0004) + 2),r4
0163 8DBF       766            mov     ((_main_v_1_41 + 0x0004) + 3),r5
0165            767   ;        main.c:61: v[2] = Volts_at_Pin(QFP32_MUX_P2_4);
0165 758211     768            mov     dpl,#0x11
0168 120000     769            lcall   _Volts_at_Pin
016B AA82       770            mov     r2,dpl
016D AB83       771            mov     r3,dph
016F ACF0       772            mov     r4,b
0171 FD         773            mov     r5,a
0172 8AC0       774            mov     (_main_v_1_41 + 0x0008),r2
0174 8BC1       775            mov     ((_main_v_1_41 + 0x0008) + 1),r3
0176 8CC2       776            mov     ((_main_v_1_41 + 0x0008) + 2),r4
0178 8DC3       777            mov     ((_main_v_1_41 + 0x0008) + 3),r5
017A            778   ;        main.c:62: v[3] = Volts_at_Pin(QFP32_MUX_P2_5);
017A 758212     779            mov     dpl,#0x12
017D 120000     780            lcall   _Volts_at_Pin
0180 AA82       781            mov     r2,dpl
0182 AB83       782            mov     r3,dph
0184 ACF0       783            mov     r4,b
0186 FD         784            mov     r5,a
0187 8AC4       785            mov     (_main_v_1_41 + 0x000c),r2
0189 8BC5       786            mov     ((_main_v_1_41 + 0x000c) + 1),r3
018B 8CC6       787            mov     ((_main_v_1_41 + 0x000c) + 2),r4
018D 8DC7       788            mov     ((_main_v_1_41 + 0x000c) + 3),r5
018F            789   ;        main.c:64: printf("Type what you want to display in line 2 (16 char max): ");
018F 7468       790            mov     a,#__str_7
0191 C0E0       791            push    acc
0193 74B9       792            mov     a,#(__str_7 >> 8)
0195 C0E0       793            push    acc
0197 7480       794            mov     a,#0x80
0199 C0E0       795            push    acc
019B 120000     796            lcall   _printf
019E 1581       797            dec     sp
01A0 1581       798            dec     sp
01A2 1581       799            dec     sp
01A4            800   ;        main.c:65: getsn(buff, sizeof(buff));
01A4 75D011     801            mov     _getsn_PARM_2,#0x11
01A7 E4         802            clr     a
01A8 F5D1       803            mov     (_getsn_PARM_2 + 1),a
01AA 90B0F8     804            mov     dptr,#_main_buff_1_41
01AD 75F040     805            mov     b,#0x40
01B0 120000     806            lcall   _getsn
01B3            807   ;        main.c:66: printf("\n");
01B3 74A8       808            mov     a,#__str_8
01B5 C0E0       809            push    acc
01B7 74B9       810            mov     a,#(__str_8 >> 8)
01B9 C0E0       811            push    acc
01BB 7480       812            mov     a,#0x80
01BD C0E0       813            push    acc
01BF 120000     814            lcall   _printf
01C2 1581       815            dec     sp
01C4 1581       816            dec     sp
01C6 1581       817            dec     sp
01C8            818   ;        main.c:67: LCDprint(buff, 2, 1);
01C8 750002     819            mov     _LCDprint_PARM_2,#0x02
01CB D200       820            setb    _LCDprint_PARM_3
01CD 90B0F8     821            mov     dptr,#_main_buff_1_41
01D0 75F040     822            mov     b,#0x40
01D3 120000     823            lcall   _LCDprint
01D6            824   ;        main.c:68: waitms(500);
01D6 9001F4     825            mov     dptr,#0x01F4
01D9 120000     826            lcall   _waitms
01DC 020000     827            ljmp    L003002?
01DF            828            rseg R_CSEG
01DF            829   
0000            830            rseg R_XINIT
0000            831   
0000            832            rseg R_CONST
0000            833   __str_0:
0000 1B         834            db 0x1B
0001 5B324A     835            db '[2J'
0004 00         836            db 0x00
0005            837   __str_1:
0005 41444320   838            db 'ADC test program'
     74657374
     2070726F
     6772616D
0015 0A         839            db 0x0A
0016 46696C65   840            db 'File: %s'
     3A202573
001E 0A         841            db 0x0A
001F 436F6D70   842            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
002F 0A         843            db 0x0A
0030 0A         844            db 0x0A
0031 00         845            db 0x00
0032            846   __str_2:
0032 6D61696E   847            db 'main.c'
     2E63
0038 00         848            db 0x00
0039            849   __str_3:
0039 4D617220   850            db 'Mar 21 2024'
     32312032
     303234
0044 00         851            db 0x00
0045            852   __str_4:
0045 31353A30   853            db '15:07:33'
     373A3333
004D 00         854            db 0x00
004E            855   __str_5:
004E 4C434420   856            db 'LCD 4-bit test:'
     342D6269
     74207465
     73743A
005D 00         857            db 0x00
005E            858   __str_6:
005E 48656C6C   859            db 'Hello, World!'
     6F2C2057
     6F726C64
     21
006B 00         860            db 0x00
006C            861   __str_7:
006C 54797065   862            db 'Type what you want to display in line 2 (16 char max): '
     20776861
     7420796F
     75207761
     6E742074
     6F206469
     73706C61
     7920696E
     206C696E
     65203220
     28313620
     63686172
     206D6178
     293A20
00A3 00         863            db 0x00
00A4            864   __str_8:
00A4 0A         865            db 0x0A
00A5 00         866            db 0x00
00A6            867   
0003            868            CSEG
0003            869   
0003            870   end
